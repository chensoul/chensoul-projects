server.port: 9999
server.error.include-message: always

# springdoc OpenAPI 使用反向代理的地址
server.forward-headers-strategy: framework

spring.security.oauth2.jwk.keystore-location: classpath:mykeystore.jks
spring.security.oauth2.jwk.store-password: storepass

spring.datasource:
  url: jdbc:mysql://localhost:3306/chensoul-cloud?connectTimeout=2000&socketTimeout=150000&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
  driver-class-name: com.mysql.cj.jdbc.Driver
  username: dev-usr
  password: dev-pwd
  type: com.zaxxer.hikari.HikariDataSource
  hikari:
    connection-test-query: 'SELECT 1'

springdoc:
  cache.disabled: true
  swagger-ui:
    oauth:
      clientId: client
      clientSecret: secret
      useBasicAuthenticationWithAccessCodeGrant: true
  oAuthFlow:
    tokenUrl: http://localhost:8443/auth/oauth2/token

---
spring.config.activate.on-profile: docker

server.port: 8080

spring.datasource.url: jdbc:mysql://mysql:3306/chensoul-cloud?connectTimeout=2000&socketTimeout=150000&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai

---
spring.config.activate.on-profile: mysql-sharding

spring.shardingsphere:
  datasource:
    names:
      master,slave
    master:
      type: com.zaxxer.hikari.HikariDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbcUrl: jdbc:mysql://${mysql-master:mysql-master}:3307/chensoul-cloud?connectTimeout=2000&socketTimeout=60000&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
      username: dev-usr
      password: dev-pwd
    slave:
      type: com.zaxxer.hikari.HikariDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbcUrl: jdbc:mysql://${mysql-slave:mysql-slave}:3308/chensoul-cloud?connectTimeout=2000&socketTimeout=60000&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
      username: dev-usr
      password: dev-pwd
  masterslave:
    # 最终的数据源名称
    name: dataSource
    load-balance-algorithm-type: round_robin
    # 主库数据源名称
    master-data-source-name: master
    # 从库数据源名称列表，多个逗号分隔
    slave-data-source-names: slave
  props:
    sql:
      show: true
# Sharding Sphere 不支持数据库健康检查
management.health.db.enabled: false
